{"version":3,"sources":["components/Button/ButtonBack.jsx","components/ModalContent.jsx","containers/App.jsx"],"names":["ButtonBack","props","history","useHistory","type","onClick","goBack","Option","Select","layout","labelCol","span","wrapperCol","ModalContent","Form","useForm","form","isModalVisible","handleCancel","onSubmitContent","onDeleteContent","titleModal","formValues","onCancel","resetFields","useEffect","setFieldsValue","id","title","description","status","onSubmit","validateFields","then","values","catch","error","name","onFinish","visible","footer","className","Item","htmlType","label","style","display","rules","required","message","placeholder","width","value","App","handleCreate","setState","handleUpdate","val","createData","updateData","data","Object","assign","createdAt","moment","format","listDataUnFinished","length","listDataDone","deleteData","state","this","fetchData","otherProps","map","item","Component","connect","app"],"mappings":"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","file":"static/js/6.2c564a48.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst ButtonBack = (props) => {\r\n  const history = useHistory();\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  return <button type=\"button\" onClick={handleBack}>Back</button>\r\n}\r\n\r\nexport default ButtonBack;","import React, { useEffect } from 'react';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/select/style/css';\r\nimport { Modal, Form, Input, Button, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n\r\nconst ModalContent = props => {\r\n    const [form] = Form.useForm();\r\n    const { isModalVisible, handleCancel, onSubmitContent, onDeleteContent, titleModal, formValues } = props;\r\n\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        handleCancel();\r\n    };\r\n    \r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            id: formValues.id || '',\r\n            title: formValues.title,\r\n            description: formValues.description,\r\n            status: formValues.status,\r\n          });\r\n      }, [form, formValues]);\r\n\r\n    const onSubmit = () => {\r\n        form.validateFields().then(values => {\r\n            onSubmitContent(values);\r\n            onCancel();\r\n        })\r\n        .catch(error => {\r\n\r\n        })\r\n    };\r\n\r\n    const onDelete = () => {\r\n        onDeleteContent(formValues);\r\n        onCancel();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n            {...layout}\r\n            name=\"formTodo\"\r\n            form={form}\r\n            onFinish={onSubmit}\r\n        >\r\n            <Modal \r\n                title={`${titleModal} To do`} \r\n                visible={isModalVisible}\r\n                onCancel={onCancel}\r\n                footer={[\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        {formValues.status !== 1 && titleModal !== 'Create' && (\r\n                            <Button className=\"mr-3\" type=\"danger\" onClick={onDelete}>\r\n                                Delete\r\n                            </Button>\r\n                        )},\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={onSubmit}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </div>\r\n                ]}\r\n            >\r\n                <Form.Item\r\n                    label=\"Id\"\r\n                    name=\"id\"\r\n                    style={{ display: 'none' }}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    rules={[{ required: true, message: 'Please input the Title!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    rules={[{ required: true, message: 'Please input the Description!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item\r\n                    label=\"Status\"\r\n                    name=\"status\"\r\n                    rules={[{ required: true, message: 'Please input the Status!' }]}\r\n                >\r\n                    <Select placeholder=\"Select a option\" style={{ width: '100%' }}>\r\n                        <Option value={1}>Done</Option>\r\n                        <Option value={0}>Unfinished</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n            </Modal>\r\n        </Form>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default ModalContent;","import '../../src/styles/App.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData, createData, updateData, deleteData } from '../stores/actions/app.action';\r\nimport ModalContent from '../components/ModalContent';\r\nimport moment from 'moment';\r\nimport ButtonBack from '../components/Button/ButtonBack';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      formValues: {},\r\n      titleModal: 'Create'\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchData();\r\n  }\r\n\r\n  handleCreate = () => {\r\n    this.setState({ isModalVisible: true, formValues: {}, titleModal: 'Create' });\r\n  };\r\n\r\n  handleUpdate = val => {\r\n    this.setState({ isModalVisible: true, formValues: val, titleModal: 'Update' });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ isModalVisible: false, formValues: {}, titleModal: 'Create' });\r\n  };\r\n\r\n  onSubmitContent = val => {\r\n    const { createData, updateData, data } = this.props;\r\n    if(val.id){\r\n      updateData(Object.assign(val, { createdAt: moment().format('YYYY-MM-DD HH:mm') }));\r\n    } else {\r\n      const id = data.listDataUnFinished.length + data.listDataDone.length + 1;\r\n      createData(Object.assign(val, { id, createdAt: moment().format('YYYY-MM-DD HH:mm') }));\r\n    }\r\n  };\r\n\r\n  onDeleteContent = val => {\r\n    const { deleteData } = this.props;\r\n    deleteData(val);\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const otherProps = {\r\n      handleCreate: this.handleCreate,\r\n      handleUpdate: this.handleUpdate,\r\n      handleCancel: this.handleCancel,\r\n      onSubmitContent: this.onSubmitContent,\r\n      onDeleteContent: this.onDeleteContent\r\n    }\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-center mb-5 d-flex justify-content-between\">\r\n            <ButtonBack />\r\n            <h3 className=\"text-center\">To do application</h3>\r\n            <div />\r\n          </div>\r\n          <div className=\"col-md-12 text-center mb-5\">\r\n            <button type=\"button\" onClick={this.handleCreate}>Create To do</button>\r\n          </div>\r\n          <div className=\"col-md-6 border\">\r\n            <p>List Data (not finished)</p>\r\n            <ul>\r\n              {data.listDataUnFinished.map(item => (\r\n                <li className=\"data-list\" onClick={() => this.handleUpdate(item)}>{item.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-6 border\">\r\n            <p>List Data (done)</p>\r\n            <ul>\r\n              {data.listDataDone.map(item => (\r\n                <li className=\"data-list\" onClick={() => this.handleUpdate(item)}>{item.title}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <ModalContent {...this.state} {...this.props} {...otherProps} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.app\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchData, createData, updateData, deleteData })(App);"],"sourceRoot":""}